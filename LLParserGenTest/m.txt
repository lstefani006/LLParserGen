
fun ww(a : int,b : int) : void {
	var d : int;
	a = ww(a, b+1);
	ww(a, b+1);
	fact(3);
	d = 3;
	if (d > 0)
		a = 3;
	
	while (Fibonacci(a) > a)
	{
		a = a-1;
		if (a > b) break;
	}
}

fun fact(n : int) : int {
	if (n == 0) return 1;
	return n * fact(n-1);
}

fun Fibonacci(n : int) : int
{
	if (n == 0)
		return 0;
	else if (n == 1)
		return 1;
	
	return Fibonacci(n-1) + Fibonacci(n-2);
}

fun gcd(a : int, b : int) : int
{
	while (a != b) 
		if (a > b)
			a = a - b;
		else
			b = b - a;
	return a;

}

fun ff(a : int, b : int) : int {
	if (a > 0) return a;
	a =ff(1,2);
	return a + b;
}
